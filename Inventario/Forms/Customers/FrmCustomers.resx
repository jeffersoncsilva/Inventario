<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>